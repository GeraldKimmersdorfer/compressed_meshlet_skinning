<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug_Vulkan|x64">
      <Configuration>Debug_Vulkan</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Publish_Vulkan|x64">
      <Configuration>Publish_Vulkan</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release_Vulkan|x64">
      <Configuration>Release_Vulkan</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="ImGuiFileDialog\ImGuiFileDialog.cpp" />
    <ClCompile Include="source\avk_extensions.cpp" />
    <ClCompile Include="source\helpers\csv_helpers.cpp" />
    <ClCompile Include="source\helpers\hud_helpers.cpp" />
    <ClCompile Include="source\helpers\lut_helper.cpp" />
    <ClCompile Include="source\helpers\packing_helper.cpp" />
    <ClCompile Include="source\meshletbuilder\AVKBuilder.cpp" />
    <ClCompile Include="source\meshletbuilder\BoneLUTDependentBuilder.cpp" />
    <ClCompile Include="source\meshletbuilder\MeshletbuilderInterface.cpp" />
    <ClCompile Include="source\meshletbuilder\MeshoptimizerBuilder.cpp" />
    <ClCompile Include="source\MeshletsApp.cpp" />
    <ClCompile Include="source\main.cpp" />
    <ClCompile Include="source\pipelines\MeshPipeline.cpp" />
    <ClCompile Include="source\pipelines\PipelineInterface.cpp" />
    <ClCompile Include="source\pipelines\VertexIndirectPipeline.cpp" />
    <ClCompile Include="source\shadercompiler\ShaderFile.cpp" />
    <ClCompile Include="source\shadercompiler\ShaderMetaCompiler.cpp" />
    <ClCompile Include="source\SharedData.cpp" />
    <ClCompile Include="source\vertexcompressor\BoneLUTCompression.cpp" />
    <ClCompile Include="source\vertexcompressor\MeshletRiggedCompression.cpp" />
    <ClCompile Include="source\vertexcompressor\NoCompression.cpp" />
    <ClCompile Include="source\vertexcompressor\PermutationCodec.cpp" />
    <ClCompile Include="source\vertexcompressor\VertexCompressionInterface.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="resource.h" />
    <ClInclude Include="source\avk_extensions.hpp" />
    <ClInclude Include="source\helpers\csv_helpers.h" />
    <ClInclude Include="source\helpers\hud_helpers.h" />
    <ClInclude Include="source\helpers\lut_helper.h" />
    <ClInclude Include="source\helpers\packing_helper.h" />
    <ClInclude Include="source\meshletbuilder\AVKBuilder.h" />
    <ClInclude Include="source\meshletbuilder\BoneLUTDependentBuilder.h" />
    <ClInclude Include="source\meshletbuilder\MeshletbuilderInterface.h" />
    <ClInclude Include="source\meshletbuilder\MeshoptimizerBuilder.h" />
    <ClInclude Include="source\MeshletsApp.h" />
    <ClInclude Include="source\pipelines\mcc.h" />
    <ClInclude Include="source\pipelines\MeshPipeline.h" />
    <ClInclude Include="source\pipelines\PipelineInterface.h" />
    <ClInclude Include="source\pipelines\VertexIndirectPipeline.h" />
    <ClInclude Include="source\shadercompiler\ShaderFile.h" />
    <ClInclude Include="source\shadercompiler\ShaderMetaCompiler.h" />
    <ClInclude Include="source\shadercompiler\ShaderMetaConstant.h" />
    <ClInclude Include="source\SharedData.h" />
    <ClInclude Include="source\shared_structs.h" />
    <ClInclude Include="source\thirdparty\blend_attribute_codec.h" />
    <ClInclude Include="source\thirdparty\permutation_coding.h" />
    <ClInclude Include="source\vertexcompressor\BoneLUTCompression.h" />
    <ClInclude Include="source\vertexcompressor\MeshletRiggedCompression.h" />
    <ClInclude Include="source\vertexcompressor\NoCompression.h" />
    <ClInclude Include="source\vertexcompressor\PermutationCodec.h" />
    <ClInclude Include="source\vertexcompressor\VertexCompressionInterface.h" />
  </ItemGroup>
  <ItemGroup>
    <None Include="assets\mixamo_single_no_texture.fbx" />
    <None Include="assets\skinning_dummy\weight_meshlet_creation_test.fbx" />
    <None Include="assets\tools\CSVFileView.exe" />
    <None Include="assets\tools\glslangValidator.exe" />
    <None Include="shaders\background\screen_pass.vert" />
    <None Include="shaders\background\solid_color.frag" />
    <None Include="shaders\diffuse_shading_fixed_lightsource.frag" />
    <None Include="shaders\include\blend_attribute_codec.glsl" />
    <None Include="shaders\include\blend_attribute_compression.glsl" />
    <None Include="shaders\include\glsl_helpers.glsl" />
    <None Include="shaders\include\mcc.glsl" />
    <None Include="shaders\include\shared_structs.glsl" />
    <None Include="shaders\include\vertex_reconstruction.glsl" />
    <None Include="shaders\meshlet.mesh" />
    <None Include="shaders\meshlet.task" />
    <None Include="shaders\vertex.vert" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="auto_vk_toolkit\visual_studio\auto_vk_toolkit\auto_vk_toolkit.vcxproj">
      <Project>{602f842f-50c1-466d-8696-1707937d8ab9}</Project>
    </ProjectReference>
    <ProjectReference Include="meshoptimizer\build\meshoptimizer.vcxproj">
      <Project>{1aa77a78-5ead-3ed7-b8de-8f2fc0302c40}</Project>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Image Include="assets\icon_big.ico" />
    <Image Include="assets\icon_small.png" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="compressed_meshlet_skinning.rc" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{84ddebef-7b65-4099-98b1-e876d72c1eff}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>compressedmeshletskinning</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
    <ProjectName>compressed_meshlet_skinning</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Vulkan|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Vulkan|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Publish_Vulkan|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared" />
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Vulkan|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="auto_vk_toolkit\visual_studio\props\solution_directories.props" />
    <Import Project="auto_vk_toolkit\visual_studio\props\linked_libs_debug.props" />
    <Import Project="auto_vk_toolkit\visual_studio\props\rendering_api_vulkan.props" />
    <Import Project="auto_vk_toolkit\visual_studio\props\external_dependencies.props" />
    <Import Project="auto_vk_toolkit\visual_studio\props\extra_debug_dependencies.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release_Vulkan|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="auto_vk_toolkit\visual_studio\props\solution_directories.props" />
    <Import Project="auto_vk_toolkit\visual_studio\props\linked_libs_release.props" />
    <Import Project="auto_vk_toolkit\visual_studio\props\rendering_api_vulkan.props" />
    <Import Project="auto_vk_toolkit\visual_studio\props\external_dependencies.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Publish_Vulkan|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="auto_vk_toolkit\visual_studio\props\solution_directories.props" />
    <Import Project="auto_vk_toolkit\visual_studio\props\linked_libs_release.props" />
    <Import Project="auto_vk_toolkit\visual_studio\props\rendering_api_vulkan.props" />
    <Import Project="auto_vk_toolkit\visual_studio\props\external_dependencies.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Vulkan|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(ProjectDir)bin\$(Configuration)_$(Platform)\</OutDir>
    <IntDir>$(ProjectDir)temp\intermediate\$(Configuration)_$(Platform)\</IntDir>
    <CustomBuildAfterTargets>Build</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Publish_Vulkan|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(ProjectDir)bin\$(Configuration)_$(Platform)\executable\</OutDir>
    <IntDir>$(ProjectDir)temp\intermediate\$(Configuration)_$(Platform)\</IntDir>
    <CustomBuildAfterTargets>Build</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Vulkan|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(ProjectDir)bin\$(Configuration)_$(Platform)\</OutDir>
    <IntDir>$(ProjectDir)temp\intermediate\$(Configuration)_$(Platform)\</IntDir>
    <CustomBuildAfterTargets>Build</CustomBuildAfterTargets>
    <SourcePath>$(SourcePath)</SourcePath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release_Vulkan|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <ForcedIncludeFiles>
      </ForcedIncludeFiles>
      <TreatSpecificWarningsAsErrors>4715</TreatSpecificWarningsAsErrors>
      <PrecompiledHeaderFile>cg_stdafx.hpp</PrecompiledHeaderFile>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <CustomBuildStep>
      <Command>
      </Command>
      <Outputs>some-non-existant-file-to-always-run-the-custom-build-step.txt;%(Outputs)</Outputs>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Publish_Vulkan|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <ForcedIncludeFiles>
      </ForcedIncludeFiles>
      <TreatSpecificWarningsAsErrors>4715</TreatSpecificWarningsAsErrors>
      <PrecompiledHeaderFile>cg_stdafx.hpp</PrecompiledHeaderFile>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <CustomBuildStep>
      <Command>powershell.exe -ExecutionPolicy Bypass -File "$(ToolsBin)invoke_post_build_helper.ps1" -msbuild "$(MsBuildToolsPath)"  -configuration "$(Configuration)" -framework "$(FrameworkRoot)\"  -platform "$(Platform)" -vcxproj "$(ProjectPath)" -filters "$(ProjectPath).filters" -output "$(OutputPath)\" -executable "$(TargetPath)" -external "$(ExternalRoot)\"</Command>
      <Outputs>some-non-existant-file-to-always-run-the-custom-build-step.txt;%(Outputs)</Outputs>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Vulkan|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>false</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <ForcedIncludeFiles>
      </ForcedIncludeFiles>
      <TreatSpecificWarningsAsErrors>4715</TreatSpecificWarningsAsErrors>
      <PrecompiledHeaderFile>cg_stdafx.hpp</PrecompiledHeaderFile>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <CustomBuildStep>
      <Command>powershell.exe -ExecutionPolicy Bypass -File "$(ToolsBin)invoke_post_build_helper.ps1" -msbuild "$(MsBuildToolsPath)"  -configuration "$(Configuration)" -framework "$(FrameworkRoot)\"  -platform "$(Platform)" -vcxproj "$(ProjectPath)" -filters "$(ProjectPath).filters" -output "$(OutputPath)\" -executable "$(TargetPath)" -external "$(ExternalRoot)\"</Command>
      <Outputs>some-non-existant-file-to-always-run-the-custom-build-step.txt;%(Outputs)</Outputs>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>